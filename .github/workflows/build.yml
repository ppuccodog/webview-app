name: 构建安卓应用（零语法错终极版）
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 全局装Cordova+处理wrapper.gradle
        run: |
          npm config set registry https://registry.npmjs.org/
          npm cache clean --force
          npm install -g cordova@10.0.0 cordova-android@9.0.0
          
          # 定位cordova-android根目录
          CORDOVA_ANDROID_ROOT=$(find /opt/hostedtoolcache/node -type d -name "cordova-android" -path "*/node_modules/cordova-android" | head -1)
          [ -d "$CORDOVA_ANDROID_ROOT" ] || { echo "❌ 没找到cordova-android根目录"; exit 1; }
          
          # 创建空wrapper.gradle（避免冲突+存在性）
          WRAPPER_GRADLE_PATH="$CORDOVA_ANDROID_ROOT/bin/templates/wrapper.gradle"
          mkdir -p "$(dirname "$WRAPPER_GRADLE_PATH")"
          echo -e "// 空任务占位符\n task wrapper {}\n" > "$WRAPPER_GRADLE_PATH"
          [ -f "$WRAPPER_GRADLE_PATH" ] || { echo "❌ wrapper.gradle创建失败"; exit 1; }
          
          # 定位核心资源
          GLOBAL_BUILD_GRADLE=$(find "$CORDOVA_ANDROID_ROOT" -name "build.gradle" -path "*/templates/project/build.gradle" | head -1)
          [ -f "$GLOBAL_BUILD_GRADLE" ] || { echo "❌ 全局build.gradle缺失"; exit 1; }
          
          # 记录环境变量
          echo "CORDOVA_ANDROID_ROOT=$CORDOVA_ANDROID_ROOT" >> $GITHUB_ENV
          echo "GLOBAL_BUILD_GRADLE=$GLOBAL_BUILD_GRADLE" >> $GITHUB_ENV
          cordova -v

      - name: 安装JDK8（固定验证）
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-8-jdk
          JDK8_PATH="/usr/lib/jvm/java-8-openjdk-amd64"
          [ -f "$JDK8_PATH/bin/javac" ] && "$JDK8_PATH/bin/java" -version 2>&1 | grep -q "1.8.0" || { echo "❌ JDK8异常"; exit 1; }
          echo "JDK8_PATH=$JDK8_PATH" >> $GITHUB_ENV

      - name: 安装安卓SDK（指定版本）
        run: |
          ANDROID_SDK_PATH="$HOME/android-sdk"
          mkdir -p $ANDROID_SDK_PATH
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d $ANDROID_SDK_PATH/cmdline-tools
          SDK_MANAGER="$ANDROID_SDK_PATH/cmdline-tools/cmdline-tools/bin/sdkmanager"
          yes | $SDK_MANAGER --licenses || true
          $SDK_MANAGER "platforms;android-29" "build-tools;29.0.3" "platform-tools"
          [ -d "$ANDROID_SDK_PATH/platforms/android-29" ] || { echo "❌ SDK缺失"; exit 1; }
          echo "ANDROID_SDK_PATH=$ANDROID_SDK_PATH" >> $GITHUB_ENV

      - name: 构建项目（零语法错）
        run: |
          # 强制环境变量
          export JAVA_HOME=$JDK8_PATH
          export PATH="$JAVA_HOME/bin:$PATH:$ANDROID_SDK_PATH/build-tools/29.0.3"
          export ANDROID_SDK_ROOT=$ANDROID_SDK_PATH
          
          # 项目初始化
          PROJECT_PATH="/home/runner/work/webview-app/webview-app/myapp"
          rm -rf "$PROJECT_PATH"
          mkdir -p "$PROJECT_PATH/www"
          cd "$PROJECT_PATH"
          
          # 1. 写基础配置（无嵌套引号）
          echo '{"name":"x-app","version":"1.0.0","cordova":{"platforms":["android"]}}' > package.json
          echo '<?xml version="1.0"?><widget id="com.my.simpleapp" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0"><name>YJSCSDH</name><content src="index.html"/></widget>' > config.xml
          echo '<html><body>Hello</body></html>' > www/index.html
          
          # 2. 添加安卓平台
          cordova platform add android@9.0.0 --save
          sleep 3
          
          # 3. 定位app目录
          ANDROID_APP_PATH="$PROJECT_PATH/platforms/android/app"
          mkdir -p "$ANDROID_APP_PATH"
          
          # 4. 关键：用echo逐行写build.gradle（零语法错）
          BUILD_GRADLE="$ANDROID_APP_PATH/build.gradle"
          # 清空文件（避免残留）
          > "$BUILD_GRADLE"
          # 逐行写入（每一行都用echo，无任何EOF）
          echo "buildscript {" >> "$BUILD_GRADLE"
          echo "    repositories {" >> "$BUILD_GRADLE"
          echo "        mavenCentral()" >> "$BUILD_GRADLE"
          echo "        jcenter()" >> "$BUILD_GRADLE"
          echo "    }" >> "$BUILD_GRADLE"
          echo "    dependencies {" >> "$BUILD_GRADLE"
          echo "        classpath 'com.android.tools.build:gradle:4.1.3'" >> "$BUILD_GRADLE"
          echo "    }" >> "$BUILD_GRADLE"
          echo "}" >> "$BUILD_GRADLE"
          echo "" >> "$BUILD_GRADLE"
          echo "allprojects {" >> "$BUILD_GRADLE"
          echo "    repositories {" >> "$BUILD_GRADLE"
          echo "        mavenCentral()" >> "$BUILD_GRADLE"
          echo "        jcenter()" >> "$BUILD_GRADLE"
          echo "    }" >> "$BUILD_GRADLE"
          echo "}" >> "$BUILD_GRADLE"
          echo "" >> "$BUILD_GRADLE"
          echo "apply plugin: 'com.android.application'" >> "$BUILD_GRADLE"
          echo "" >> "$BUILD_GRADLE"
          echo "android {" >> "$BUILD_GRADLE"
          echo "    compileSdkVersion 29" >> "$BUILD_GRADLE"
          echo "    buildToolsVersion '29.0.3'" >> "$BUILD_GRADLE"
          echo "    sourceSets {" >> "$BUILD_GRADLE"
          echo "        main {" >> "$BUILD_GRADLE"
          echo "            java { srcDirs = [\"src/main/java\"] }" >> "$BUILD_GRADLE"
          echo "            assets { srcDirs = [\"src/main/assets\"] }" >> "$BUILD_GRADLE"
          echo "        }" >> "$BUILD_GRADLE"
          echo "    }" >> "$BUILD_GRADLE"
          echo "    defaultConfig {" >> "$BUILD_GRADLE"
          echo "        applicationId \"com.my.simpleapp\"" >> "$BUILD_GRADLE"
          echo "        minSdkVersion 21" >> "$BUILD_GRADLE"
          echo "        targetSdkVersion 29" >> "$BUILD_GRADLE"
          echo "        versionCode 1" >> "$BUILD_GRADLE"
          echo "        versionName \"1.0.0\"" >> "$BUILD_GRADLE"
          echo "    }" >> "$BUILD_GRADLE"
          echo "    buildTypes {" >> "$BUILD_GRADLE"
          echo "        release {" >> "$BUILD_GRADLE"
          echo "            minifyEnabled false" >> "$BUILD_GRADLE"
          echo "            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'" >> "$BUILD_GRADLE"
          echo "        }" >> "$BUILD_GRADLE"
          echo "    }" >> "$BUILD_GRADLE"
          echo "}" >> "$BUILD_GRADLE"
          echo "" >> "$BUILD_GRADLE"
          echo "dependencies {" >> "$BUILD_GRADLE"
          echo "    implementation fileTree(dir: 'libs', include: ['*.jar'])" >> "$BUILD_GRADLE"
          echo "    implementation 'androidx.appcompat:appcompat:1.0.2'" >> "$BUILD_GRADLE"
          echo "    implementation project(':CordovaLib')" >> "$BUILD_GRADLE"
          echo "}" >> "$BUILD_GRADLE"
          
          # 5. 写gradle.properties（无嵌套）
          echo "android.useAndroidX=false" > "$ANDROID_APP_PATH/gradle.properties"
          echo "android.enableJetifier=false" >> "$ANDROID_APP_PATH/gradle.properties"
          echo "org.gradle.java.home=$JDK8_PATH" >> "$ANDROID_APP_PATH/gradle.properties"
          
          # 6. 补MainActivity.java（逐行写）
          ACTIVITY_DIR="$ANDROID_APP_PATH/src/main/java/com/my/simpleapp"
          mkdir -p "$ACTIVITY_DIR"
          echo "package com.my.simpleapp;" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "import org.apache.cordova.CordovaActivity;" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "import android.os.Bundle;" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "public class MainActivity extends CordovaActivity {" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "    @Override" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "    public void onCreate(Bundle savedInstanceState) {" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "        super.onCreate(savedInstanceState);" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "        loadUrl(launchUrl);" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "    }" >> "$ACTIVITY_DIR/MainActivity.java"
          echo "}" >> "$ACTIVITY_DIR/MainActivity.java"
          
          # 7. 补strings.xml（无嵌套引号）
          RES_DIR="$ANDROID_APP_PATH/src/main/res/values"
          mkdir -p "$RES_DIR"
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>" >> "$RES_DIR/strings.xml"
          echo "<resources>" >> "$RES_DIR/strings.xml"
          echo "    <string name=\"app_name\">YJSCSDH</string>" >> "$RES_DIR/strings.xml"
          echo "</resources>" >> "$RES_DIR/strings.xml"
          
          # 8. 补AndroidManifest.xml（无嵌套）
          MANIFEST_DIR="$ANDROID_APP_PATH/src/main"
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.my.simpleapp\" android:versionCode=\"1\" android:versionName=\"1.0.0\">" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "    <uses-sdk android:minSdkVersion=\"21\" android:targetSdkVersion=\"29\"/>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "    <application android:label=\"@string/app_name\">" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "        <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize\">" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "            <intent-filter>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "                <action android:name=\"android.intent.action.MAIN\"/>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "                <category android:name=\"android.intent.category.LAUNCHER\"/>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "            </intent-filter>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "        </activity>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "    </application>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          echo "</manifest>" >> "$MANIFEST_DIR/AndroidManifest.xml"
          
          # 9. 编译APK（直接调用gradle）
          cd "$PROJECT_PATH/platforms/android"
          ./gradlew assembleRelease --quiet
          
          # 10. 检查APK
          APK_PATH="$ANDROID_APP_PATH/build/outputs/apk/release/app-release.apk"
          if [ -f "$APK_PATH" ]; then
            echo "🎉 成功！APK路径：$APK_PATH"
            cp "$APK_PATH" "/home/runner/work/webview-app/webview-app/final-app.apk"
          else
            echo "❌ 编译失败，日志："
            cat "$PROJECT_PATH/platforms/android/build/outputs/logs/build.log"
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 安卓套壳应用
          path: /home/runner/work/webview-app/webview-app/final-app.apk
          retention-days: 30
