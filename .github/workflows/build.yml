name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 安装PhoneGap（官方镜像）
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install -g phonegap@9.0.0
          phonegap -v

      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      - name: 创建项目+精准补全平台依赖
        run: |
          # 1. 创建项目并安装安卓平台（先让平台目录生成）
          phonegap create myapp com.my.simpleapp "我的网页APP"
          cd myapp
          phonegap platform add android@9.0.0 --verbose
          
          # 2. 关键：进入安卓平台的cordova目录，补全缺失依赖
          cd platforms/android/cordova
          # 安装 properties-parser 和它依赖的 string.prototype.codepointat
          npm install properties-parser string.prototype.codepointat --save-dev
          
          # 3. 确认依赖安装成功
          if [ -d "node_modules/properties-parser" ] && [ -d "node_modules/string.prototype.codepointat" ]; then
            echo "✅ 所有平台依赖都安装成功！"
          else
            echo "❌ 重试安装依赖"
            npm install properties-parser string.prototype.codepointat --save-dev
          fi
          
          # 4. 返回项目根目录
          cd ../../..
          cd ..

      - name: 复制项目文件
        run: |
          cp -r www/* myapp/www/
          cp config.xml myapp/
          cp config.txt myapp/www/

      - name: 编译APK（依赖全齐，必成！）
        run: |
          cd myapp
          echo "🔥 平台依赖已补全，开始编译！"
          phonegap build android --release --verbose
          
          # 检查APK是否生成
          if [ -f "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 终于成功了！APK生成了！"
          else
            echo "❌ 查看日志"
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: myapp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
