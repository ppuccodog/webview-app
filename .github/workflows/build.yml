name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤1：拉取仓库代码
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      # 步骤2：安装Node.js
      - name: 安装Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      # 步骤3：安装Cordova（国内镜像，确保下载）
      - name: 安装Cordova
        run: |
          npm config set registry https://registry.npmmirror.com/
          npm cache clean -f
          npm install -g cordova@11.0.0
          cordova -v || (npm install -g cordova@11.0.0 && cordova -v)

      # 步骤4：安装安卓SDK
      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      # 步骤5：在空文件夹创建项目（避开非空目录错误）
      - name: 在空文件夹创建Cordova项目
        run: |
          # 创建一个临时空文件夹（避免根目录非空问题）
          mkdir -p cordova-project
          cd cordova-project
          
          # 在空文件夹创建项目（这次不会报错）
          cordova create . com.my.simpleapp "我的网页APP"
          
          # 安装安卓平台（platforms生成在cordova-project内）
          npm config set registry https://registry.npmmirror.com/
          cordova platform add android@10.1.2 --verbose
          
          # 确认安卓平台存在
          if [ -d "platforms/android" ]; then
            echo "✅ 安卓平台安装成功！"
          else
            echo "❌ 安卓平台安装失败"
            exit 1
          fi
          cd ..  # 回到根目录

      # 步骤6：复制我们的文件到项目中（路径100%正确）
      - name: 复制网页和配置文件
        run: |
          # 复制index.html等网页文件
          cp -r www/* cordova-project/platforms/android/app/src/main/assets/www/
          # 复制APP配置文件
          cp config.xml cordova-project/platforms/android/app/src/main/res/xml/
          # 复制网址配置文件
          cp config.txt cordova-project/platforms/android/app/src/main/assets/www/
          echo "✅ 所有文件复制完成"

      # 步骤7：配置Gradle 7.5（兼容Cordova）
      - name: 配置Gradle版本
        run: |
          cd cordova-project/platforms/android
          mkdir -p gradle/wrapper
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip" > gradle/wrapper/gradle-wrapper.properties
          echo "✅ Gradle配置完成"
          cd ../../..  # 回到根目录

      # 步骤8：编译APK（在项目目录执行，路径正确）
      - name: 编译生成APK
        run: |
          cd cordova-project
          echo "开始编译APK，首次约10-15分钟..."
          # 用Cordova命令编译，自动找到所有依赖
          cordova build android --release
          
          # 检查APK是否生成
          if [ -f "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 APK编译成功！终于搞定了！"
          else
            echo "❌ APK编译失败"
            exit 1
          fi
          cd ..  # 回到根目录

      # 步骤9：上传APK供下载
      - name: 上传APK文件
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          # APK实际路径（cordova-project内）
          path: cordova-project/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
