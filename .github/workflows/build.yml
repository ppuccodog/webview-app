name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤1：拉取仓库代码
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      # 步骤2：安装Node.js
      - name: 安装Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      # 步骤3：切换国内npm镜像+安装Cordova
      - name: 切换国内npm镜像并安装Cordova
        run: |
          npm config set registry https://registry.npmmirror.com/
          npm cache clean -f
          npm install -g cordova@11.0.0
          cordova -v || (echo "Cordova安装失败，重试" && npm install -g cordova@11.0.0)

      # 步骤4：安装安卓SDK
      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      # 步骤5：直接安装安卓平台（不绕myapp，避免路径混乱）
      - name: 直接安装安卓平台（根目录生成platforms）
        run: |
          # 无需创建myapp，直接在根目录初始化并安装安卓平台
          cordova init . com.my.simpleapp "我的网页APP"  # 根目录初始化项目
          npm config set registry https://registry.npmmirror.com/
          cordova platform add android@10.1.2 --verbose
          
          # 检查根目录platforms（日志实际生成路径）
          if [ -d "platforms/android" ]; then
            echo "✅ 安卓平台安装成功！路径：根目录/platforms/android"
          else
            echo "❌ 安卓平台安装失败"
            exit 1
          fi

      # 步骤6：创建目标文件夹（根目录platforms）
      - name: 创建文件复制目录
        run: |
          mkdir -p platforms/android/app/src/main/assets/www/
          mkdir -p platforms/android/app/src/main/res/xml/

      # 步骤7：复制文件到根目录platforms
      - name: 复制网页和配置文件
        run: |
          cp -r www/* platforms/android/app/src/main/assets/www/
          cp config.xml platforms/android/app/src/main/res/xml/
          cp config.txt platforms/android/app/src/main/assets/www/

      # 步骤8：配置Gradle 7.5（根目录platforms）
      - name: 配置Gradle版本
        run: |
          cd platforms/android
          mkdir -p gradle/wrapper
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip" > gradle/wrapper/gradle-wrapper.properties

      # 步骤9：编译APK（根目录执行Cordova命令）
      - name: 编译生成APK
        run: |
          echo "开始编译，首次约10分钟..."
          cordova build android --release  # 根目录执行，自动找到platforms
          
          # 检查APK是否生成
          if [ -f "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "✅ APK编译成功！"
          else
            echo "❌ APK编译失败"
            exit 1
          fi

      # 步骤10：下载APK
      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
