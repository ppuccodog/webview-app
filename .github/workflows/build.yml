name: 构建安卓应用（Gradle仓库修复版）
on:
  workflow_dispatch:

jobs:
  build-android-apk:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14（可选，本流程无依赖）
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 安装安卓构建工具链（镜像加速版）
        run: |
          # 超时控制（5分钟）
          export TIMEOUT=300
          
          # 1. 安装JDK8
          sudo apt-get update -o Acquire::ForceIPv4=true
          sudo apt-get install -y -qq openjdk-8-jdk
          JDK8_PATH="/usr/lib/jvm/java-8-openjdk-amd64"
          echo "JDK8_PATH=$JDK8_PATH" >> $GITHUB_ENV

          # 2. 安装安卓SDK（阿里云镜像）
          ANDROID_SDK_PATH="$HOME/android-sdk"
          mkdir -p $ANDROID_SDK_PATH
          SDK_TOOLS_URL="https://mirrors.aliyun.com/android/repository/commandlinetools-linux-9477386_latest.zip"
          wget --timeout=$TIMEOUT --tries=3 --no-check-certificate $SDK_TOOLS_URL -O sdk-tools.zip || exit 1
          unzip -q sdk-tools.zip -d $ANDROID_SDK_PATH/cmdline-tools

          # 3. 安装SDK组件（阿里云镜像）
          SDK_MANAGER="$ANDROID_SDK_PATH/cmdline-tools/cmdline-tools/bin/sdkmanager"
          chmod +x $SDK_MANAGER
          $SDK_MANAGER --sdk_root=$ANDROID_SDK_PATH \
            --repository=https://mirrors.aliyun.com/android/repository/ \
            "platforms;android-29" "build-tools;29.0.3" "platform-tools" \
            --verbose --no_https || exit 1
          echo "ANDROID_SDK_PATH=$ANDROID_SDK_PATH" >> $GITHUB_ENV

          # 4. 安装Gradle 6.8（关键：与安卓插件4.2.3匹配，原6.5版本过低）
          GRADLE_PATH="$HOME/gradle-6.8"
          GRADLE_URL="https://mirrors.huaweicloud.com/gradle/gradle-6.8-bin.zip"
          wget --timeout=$TIMEOUT --tries=3 --no-check-certificate $GRADLE_URL -O gradle-6.8-bin.zip || exit 1
          unzip -q gradle-6.8-bin.zip -d $HOME
          echo "GRADLE_PATH=$GRADLE_PATH" >> $GITHUB_ENV
          echo "$GRADLE_PATH/bin" >> $GITHUB_PATH

      - name: 纯手动构建安卓项目（修复仓库配置）
        run: |
          # 加载环境变量
          export JAVA_HOME=$JDK8_PATH
          export PATH="$JAVA_HOME/bin:$PATH:$ANDROID_SDK_PATH/build-tools/29.0.3:$GRADLE_PATH/bin"
          export ANDROID_SDK_ROOT=$ANDROID_SDK_PATH

          # 1. 项目基础路径
          PROJECT_PATH="/home/runner/work/webview-app/webview-app/myapp"
          rm -rf "$PROJECT_PATH"
          mkdir -p "$PROJECT_PATH"
          cd "$PROJECT_PATH" || exit 1

          # 2. 创建安卓项目结构
          ANDROID_ROOT="$PROJECT_PATH/android-project"
          APP_DIR="$ANDROID_ROOT/app"
          CORDOVA_LIB_DIR="$ANDROID_ROOT/CordovaLib"
          mkdir -p "$APP_DIR/src/main/java/com/my/simpleapp"
          mkdir -p "$APP_DIR/src/main/res/values"
          mkdir -p "$CORDOVA_LIB_DIR/src/main/java/org/apache/cordova"
          mkdir -p "$CORDOVA_LIB_DIR/src/main/res/values"
          mkdir -p "$PROJECT_PATH/www"

          # 3. 编写网页测试页面
          echo '<!DOCTYPE html><html><body style="background:#fff;"><h1>测试成功！</h1></body></html>' > "$PROJECT_PATH/www/index.html"

          # 4. 编写CordovaLib核心代码
          cat > "$CORDOVA_LIB_DIR/src/main/java/org/apache/cordova/CordovaActivity.java" << EOF
          package org.apache.cordova;
          import android.app.Activity;
          import android.os.Bundle;
          import android.webkit.WebView;
          import android.widget.LinearLayout;

          public class CordovaActivity extends Activity {
              protected WebView webView;
              protected String launchUrl = "file:///android_asset/www/index.html";

              @Override
              public void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  webView = new WebView(this);
                  LinearLayout layout = new LinearLayout(this);
                  layout.addView(webView);
                  setContentView(layout);
                  webView.loadUrl(launchUrl);
              }
          }
          EOF

          # 5. CordovaLib的build.gradle（修复仓库）
          cat > "$CORDOVA_LIB_DIR/build.gradle" << EOF
          apply plugin: 'com.android.library'

          android {
              compileSdkVersion 29
              buildToolsVersion '29.0.3'
              namespace 'org.apache.cordova'

              sourceSets {
                  main {
                      java { srcDirs = ['src/main/java'] }
                      res { srcDirs = ['src/main/res'] }
                  }
              }
          }

          // 关键：替换仓库为阿里云，解决依赖下载问题
          repositories {
              maven { url 'https://maven.aliyun.com/repository/public/' }
              maven { url 'https://maven.aliyun.com/repository/google/' }
              mavenCentral()
          }

          dependencies {
              implementation fileTree(dir: 'libs', include: ['*.jar'])
              implementation 'androidx.appcompat:appcompat:1.0.2'
          }
          EOF

          # 6. 编写app模块代码
          # 6.1 MainActivity.java
          cat > "$APP_DIR/src/main/java/com/my/simpleapp/MainActivity.java" << EOF
          package com.my.simpleapp;
          import org.apache.cordova.CordovaActivity;
          import android.os.Bundle;

          public class MainActivity extends CordovaActivity {
              @Override
              public void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
              }
          }
          EOF

          # 6.2 AndroidManifest.xml
          cat > "$APP_DIR/src/main/AndroidManifest.xml" << EOF
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
                    package="com.my.simpleapp"
                    android:versionCode="1"
                    android:versionName="1.0.0">

              <uses-sdk
                  android:minSdkVersion="21"
                  android:targetSdkVersion="29" />

              <uses-permission android:name="android.permission.INTERNET" />

              <application
                  android:allowBackup="true"
                  android:label="@string/app_name"
                  android:theme="@style/AppTheme">

                  <activity
                      android:name=".MainActivity"
                      android:label="@string/app_name"
                      android:configChanges="orientation|keyboardHidden|screenSize">

                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF

          # 6.3 strings.xml
          cat > "$APP_DIR/src/main/res/values/strings.xml" << EOF
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">YJSCSDH</string>
          </resources>
          EOF

          # 6.4 app模块的build.gradle（修复仓库+版本匹配）
          cat > "$APP_DIR/build.gradle" << EOF
          buildscript {
              // 关键1：替换构建脚本仓库为阿里云
              repositories {
                  maven { url 'https://maven.aliyun.com/repository/public/' }
                  maven { url 'https://maven.aliyun.com/repository/google/' }
                  mavenCentral()
              }
              dependencies {
                  // 关键2：安卓插件版本4.2.3（与Gradle 6.8匹配，原4.1.3已下架）
                  classpath 'com.android.tools.build:gradle:4.2.3'
              }
          }

          apply plugin: 'com.android.application'

          android {
              compileSdkVersion 29
              buildToolsVersion '29.0.3'
              namespace 'com.my.simpleapp'

              sourceSets {
                  main {
                      java { srcDirs = ['src/main/java'] }
                      res { srcDirs = ['src/main/res'] }
                      assets { srcDirs = ['src/main/assets', '../../www'] }
                      manifest { srcFile 'src/main/AndroidManifest.xml' }
                  }
              }

              defaultConfig {
                  applicationId "com.my.simpleapp"
                  minSdkVersion 21
                  targetSdkVersion 29
                  versionCode 1
                  versionName "1.0.0"
              }

              buildTypes {
                  release {
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                  }
              }
          }

          // 关键3：app模块依赖仓库也替换为阿里云
          repositories {
              maven { url 'https://maven.aliyun.com/repository/public/' }
              maven { url 'https://maven.aliyun.com/repository/google/' }
              mavenCentral()
          }

          dependencies {
              implementation fileTree(dir: 'libs', include: ['*.jar'])
              implementation project(':CordovaLib')
              implementation 'androidx.appcompat:appcompat:1.0.2'
          }
          EOF

          # 7. 项目根目录配置（修复仓库）
          # 7.1 settings.gradle
          cat > "$ANDROID_ROOT/settings.gradle" << EOF
          include ':app'
          include ':CordovaLib'
          EOF

          # 7.2 根目录build.gradle（修复仓库+版本匹配）
          cat > "$ANDROID_ROOT/build.gradle" << EOF
          buildscript {
              repositories {
                  maven { url 'https://maven.aliyun.com/repository/public/' }
                  maven { url 'https://maven.aliyun.com/repository/google/' }
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:4.2.3'
              }
          }

          allprojects {
              // 关键：所有模块的仓库都替换为阿里云
              repositories {
                  maven { url 'https://maven.aliyun.com/repository/public/' }
                  maven { url 'https://maven.aliyun.com/repository/google/' }
                  mavenCentral()
              }
          }

          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF

          # 7.3 gradle.properties
          cat > "$ANDROID_ROOT/gradle.properties" << EOF
          android.useAndroidX=false
          android.enableJetifier=false
          org.gradle.java.home=$JDK8_PATH
          org.gradle.daemon=true
          org.gradle.parallel=true
          EOF

          # 8. 生成gradlew（使用Gradle 6.8）
          cd "$ANDROID_ROOT" || exit 1
          gradle wrapper --gradle-version 6.8 --distribution-type all
          chmod +x gradlew
          [ -f "gradlew" ] || { echo "❌ gradlew生成失败"; exit 1; }

          # 9. 编译APK（带详细日志，便于排查）
          echo "🔨 开始编译APK..."
          ./gradlew :app:assembleRelease --info

          # 10. 验证APK
          APK_SOURCE="$APP_DIR/build/outputs/apk/release/app-release.apk"
          APK_DEST="$PROJECT_PATH/final-app.apk"
          if [ -f "$APK_SOURCE" ]; then
              echo "🎉 APK编译成功！大小：$(ls -lh $APK_SOURCE | awk '{print $5}')"
              cp "$APK_SOURCE" "$APK_DEST"
          else
              echo "❌ APK编译失败，查看日志："
              cat "$APP_DIR/build/outputs/logs/build.log"
              exit 1
          fi

      - name: 上传APK工件
        uses: actions/upload-artifact@v4
        with:
          name: 安卓套壳应用-Release版
          path: /home/runner/work/webview-app/webview-app/myapp/final-app.apk
          retention-days: 30
