name: 构建安卓应用（无依赖复制版）
on:
  workflow_dispatch:

jobs:
  build-android-apk:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 安装基础依赖（仅保留必要工具）
        run: |
          npm config set registry https://registry.npmjs.org/
          npm cache clean --force
          # 无需全局装Cordova，避免路径依赖
          node -v
          npm -v

      - name: 安装安卓构建工具链（核心依赖）
        run: |
          # 安装JDK8
          sudo apt-get update
          sudo apt-get install -y openjdk-8-jdk
          JDK8_PATH="/usr/lib/jvm/java-8-openjdk-amd64"
          echo "JDK8_PATH=$JDK8_PATH" >> $GITHUB_ENV

          # 安装安卓SDK（API 29）
          ANDROID_SDK_PATH="$HOME/android-sdk"
          mkdir -p $ANDROID_SDK_PATH
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d $ANDROID_SDK_PATH/cmdline-tools
          SDK_MANAGER="$ANDROID_SDK_PATH/cmdline-tools/cmdline-tools/bin/sdkmanager"
          yes | $SDK_MANAGER --licenses || true
          $SDK_MANAGER "platforms;android-29" "build-tools;29.0.3" "platform-tools"
          echo "ANDROID_SDK_PATH=$ANDROID_SDK_PATH" >> $GITHUB_ENV

          # 安装Gradle 6.5
          GRADLE_PATH="$HOME/gradle-6.5"
          wget https://services.gradle.org/distributions/gradle-6.5-bin.zip -O gradle-6.5-bin.zip
          unzip -q gradle-6.5-bin.zip -d $HOME
          echo "GRADLE_PATH=$GRADLE_PATH" >> $GITHUB_ENV
          echo "$GRADLE_PATH/bin" >> $GITHUB_PATH

      - name: 纯手动构建安卓项目（无Cordova命令依赖）
        run: |
          # 加载环境变量
          export JAVA_HOME=$JDK8_PATH
          export PATH="$JAVA_HOME/bin:$PATH:$ANDROID_SDK_PATH/build-tools/29.0.3:$GRADLE_PATH/bin"
          export ANDROID_SDK_ROOT=$ANDROID_SDK_PATH

          # 1. 项目基础路径
          PROJECT_PATH="/home/runner/work/webview-app/webview-app/myapp"
          rm -rf "$PROJECT_PATH"
          mkdir -p "$PROJECT_PATH"
          cd "$PROJECT_PATH" || exit 1

          # 2. 创建完整安卓项目结构（包含CordovaLib）
          ANDROID_ROOT="$PROJECT_PATH/android-project"
          APP_DIR="$ANDROID_ROOT/app"
          CORDOVA_LIB_DIR="$ANDROID_ROOT/CordovaLib"
          mkdir -p "$APP_DIR/src/main/java/com/my/simpleapp"
          mkdir -p "$APP_DIR/src/main/res/values"
          mkdir -p "$CORDOVA_LIB_DIR/src/main/java/org/apache/cordova"
          mkdir -p "$CORDOVA_LIB_DIR/src/main/res/values"
          mkdir -p "$PROJECT_PATH/www"  # 网页资源目录

          # 3. 编写网页资源（简单测试页面）
          echo '<!DOCTYPE html><html><body style="background:#fff;"><h1>测试成功！</h1></body></html>' > "$PROJECT_PATH/www/index.html"

          # 4. 手动编写CordovaLib核心代码（避免复制依赖）
          # 4.1 CordovaActivity.java（Cordova核心类简化版）
          cat > "$CORDOVA_LIB_DIR/src/main/java/org/apache/cordova/CordovaActivity.java" << EOF
          package org.apache.cordova;
          import android.app.Activity;
          import android.os.Bundle;
          import android.webkit.WebView;
          import android.widget.LinearLayout;

          public class CordovaActivity extends Activity {
              protected WebView webView;
              protected String launchUrl = "file:///android_asset/www/index.html";

              @Override
              public void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  // 创建WebView并加载网页
                  webView = new WebView(this);
                  LinearLayout layout = new LinearLayout(this);
                  layout.addView(webView);
                  setContentView(layout);
                  webView.loadUrl(launchUrl);
              }
          }
          EOF

          # 4.2 CordovaLib的build.gradle
          cat > "$CORDOVA_LIB_DIR/build.gradle" << EOF
          apply plugin: 'com.android.library'

          android {
              compileSdkVersion 29
              buildToolsVersion '29.0.3'
              namespace 'org.apache.cordova'

              sourceSets {
                  main {
                      java { srcDirs = ['src/main/java'] }
                      res { srcDirs = ['src/main/res'] }
                  }
              }
          }

          dependencies {
              implementation fileTree(dir: 'libs', include: ['*.jar'])
              implementation 'androidx.appcompat:appcompat:1.0.2'
          }
          EOF

          # 5. 编写app模块代码（应用主模块）
          # 5.1 MainActivity.java（继承CordovaActivity）
          cat > "$APP_DIR/src/main/java/com/my/simpleapp/MainActivity.java" << EOF
          package com.my.simpleapp;
          import org.apache.cordova.CordovaActivity;
          import android.os.Bundle;

          public class MainActivity extends CordovaActivity {
              @Override
              public void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
              }
          }
          EOF

          # 5.2 AndroidManifest.xml（应用配置）
          cat > "$APP_DIR/src/main/AndroidManifest.xml" << EOF
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
                    package="com.my.simpleapp"
                    android:versionCode="1"
                    android:versionName="1.0.0">

              <uses-sdk
                  android:minSdkVersion="21"
                  android:targetSdkVersion="29" />

              <!-- 网络权限（加载网页需要） -->
              <uses-permission android:name="android.permission.INTERNET" />

              <application
                  android:allowBackup="true"
                  android:icon="@mipmap/ic_launcher"
                  android:label="@string/app_name"
                  android:theme="@style/AppTheme">

                  <activity
                      android:name=".MainActivity"
                      android:label="@string/app_name"
                      android:configChanges="orientation|keyboardHidden|screenSize">

                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF

          # 5.3 strings.xml（字符串资源）
          cat > "$APP_DIR/src/main/res/values/strings.xml" << EOF
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">YJSCSDH</string>
              <string name="ic_launcher">@mipmap/ic_launcher</string>
          </resources>
          EOF

          # 5.4 app模块的build.gradle
          cat > "$APP_DIR/build.gradle" << EOF
          buildscript {
              repositories {
                  mavenCentral()
                  jcenter()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:4.1.3'
              }
          }

          apply plugin: 'com.android.application'

          android {
              compileSdkVersion 29
              buildToolsVersion '29.0.3'
              namespace 'com.my.simpleapp'

              sourceSets {
                  main {
                      java { srcDirs = ['src/main/java'] }
                      res { srcDirs = ['src/main/res'] }
                      assets { 
                          srcDirs = ['src/main/assets', '../../www']  # 关联网页资源目录
                      }
                      manifest { srcFile 'src/main/AndroidManifest.xml' }
                  }
              }

              defaultConfig {
                  applicationId "com.my.simpleapp"
                  minSdkVersion 21
                  targetSdkVersion 29
                  versionCode 1
                  versionName "1.0.0"
              }

              buildTypes {
                  release {
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                  }
              }
          }

          dependencies {
              implementation fileTree(dir: 'libs', include: ['*.jar'])
              implementation project(':CordovaLib')  # 依赖CordovaLib模块
              implementation 'androidx.appcompat:appcompat:1.0.2'
          }
          EOF

          # 6. 编写项目根目录配置
          # 6.1 settings.gradle（模块配置）
          cat > "$ANDROID_ROOT/settings.gradle" << EOF
          include ':app'
          include ':CordovaLib'
          EOF

          # 6.2 根目录build.gradle
          cat > "$ANDROID_ROOT/build.gradle" << EOF
          buildscript {
              repositories {
                  mavenCentral()
                  jcenter()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:4.1.3'
              }
          }

          allprojects {
              repositories {
                  mavenCentral()
                  jcenter()
              }
          }

          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF

          # 6.3 gradle.properties（禁用AndroidX+指定JDK）
          cat > "$ANDROID_ROOT/gradle.properties" << EOF
          android.useAndroidX=false
          android.enableJetifier=false
          org.gradle.java.home=$JDK8_PATH
          org.gradle.daemon=true
          org.gradle.parallel=true
          EOF

          # 7. 生成gradlew可执行文件
          cd "$ANDROID_ROOT" || exit 1
          gradle wrapper --gradle-version 6.5 --distribution-type all
          chmod +x gradlew
          [ -f "gradlew" ] || { echo "❌ gradlew生成失败"; exit 1; }

          # 8. 编译Release版APK
          echo "🔨 开始编译APK..."
          ./gradlew :app:assembleRelease --info

          # 9. 验证APK并复制到指定路径
          APK_SOURCE="$APP_DIR/build/outputs/apk/release/app-release.apk"
          APK_DEST="$PROJECT_PATH/final-app.apk"
          if [ -f "$APK_SOURCE" ]; then
              echo "🎉 APK编译成功！路径：$APK_SOURCE"
              cp "$APK_SOURCE" "$APK_DEST"
              # 输出APK信息（验证文件有效性）
              ls -lh "$APK_DEST"
          else
              echo "❌ APK编译失败，查看详细日志："
              cat "$APP_DIR/build/outputs/logs/build.log"
              exit 1
          fi

      - name: 上传APK工件
        uses: actions/upload-artifact@v4
        with:
          name: 安卓套壳应用-Release版
          path: /home/runner/work/webview-app/webview-app/myapp/final-app.apk
          retention-days: 30
