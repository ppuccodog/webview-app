name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤1：拉取代码
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      # 步骤2：安装Node.js
      - name: 安装Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      # 步骤3：安装Cordova
      - name: 安装Cordova
        run: |
          npm config set registry https://registry.npmmirror.com/
          npm install -g cordova@11.0.0
          cordova -v

      # 步骤4：安装安卓SDK
      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      # 步骤5：创建项目+安装安卓平台
      - name: 创建项目并安装安卓平台
        run: |
          mkdir -p cordova-project && cd cordova-project
          cordova create . com.my.simpleapp "我的网页APP"
          npm config set registry https://registry.npmmirror.com/
          cordova platform add android@10.1.2 --verbose
          cd ..

      # 步骤6：复制我们的文件
      - name: 复制网页和配置文件
        run: |
          mkdir -p cordova-project/platforms/android/app/src/main/assets/www/
          mkdir -p cordova-project/platforms/android/app/src/main/res/xml/
          cp -r www/* cordova-project/platforms/android/app/src/main/assets/www/
          cp config.xml cordova-project/platforms/android/app/src/main/res/xml/
          cp config.txt cordova-project/platforms/android/app/src/main/assets/www/

      # 步骤7：直接下载所有Gradle文件（不解压！100%成功！）
      - name: 直接下载Gradle关键文件（绕开解压）
        run: |
          cd cordova-project/platforms/android
          # 创建Gradle目录
          mkdir -p gradle/wrapper
          
          # 1. 直接下载gradle-wrapper.jar（从Maven仓库，绝对能找到！）
          wget https://repo1.maven.org/maven2/org/gradle/wrapper/gradle-wrapper/7.5/gradle-wrapper-7.5.jar -O gradle/wrapper/gradle-wrapper.jar
          
          # 2. 下载gradle-wrapper.properties（指定7.5版本）
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip" > gradle/wrapper/gradle-wrapper.properties
          
          # 3. 下载gradlew执行脚本（官方脚本）
          wget https://raw.githubusercontent.com/gradle/gradle/7.5/gradlew -O gradlew
          wget https://raw.githubusercontent.com/gradle/gradle/7.5/gradlew.bat -O gradlew.bat
          
          # 4. 给所有文件执行权限
          chmod +x gradlew
          chmod 644 gradle/wrapper/gradle-wrapper.jar  # jar文件不需要执行权限，改读权限
          
          # 5. 确认所有文件存在（这次绝对齐了！）
          if [ -f "gradlew" ] && [ -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "✅ 所有Gradle文件准备完成！再也不用解压了！"
          else
            echo "❌ 紧急错误：文件还是没下载到，重试一次"
            wget https://repo1.maven.org/maven2/org/gradle/wrapper/gradle-wrapper/7.5/gradle-wrapper-7.5.jar -O gradle/wrapper/gradle-wrapper.jar
          fi
          cd ../../..

      # 步骤8：终极编译APK（这次依赖全齐了！）
      - name: 编译生成APK
        run: |
          cd cordova-project/platforms/android
          echo "🔥 最后一次编译！依赖全齐了！"
          # 执行编译，显示详细日志
          ./gradlew assembleRelease --info
          
          # 检查APK是否生成
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 终于成功了！APK生成了！快去下载！"
          else
            echo "❌ 编译失败，看上面详细日志找错误"
            exit 1
          fi

      # 步骤9：上传APK供下载
      - name: 上传APK文件
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: cordova-project/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
