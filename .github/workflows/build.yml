name: 构建安卓应用（强制接受许可证）
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 全局装Cordova
        run: |
          npm config set registry https://registry.npmjs.org/
          npm cache clean --force
          rm -rf ~/.cordova ~/.npm/_cacache
          npm install -g cordova@10.0.0
          cordova -v

      - name: 安装JDK 8和11
        run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jdk openjdk-11-jdk -y
          echo "JDK8_PATH=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
          echo "JDK11_PATH=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV

      - name: 安装安卓SDK（强制接受许可证）
        run: |
          export JAVA_HOME=$JDK11_PATH
          export PATH=$JAVA_HOME/bin:$PATH
          ANDROID_SDK_PATH="$HOME/android-sdk"
          mkdir -p $ANDROID_SDK_PATH
          
          # 下载SDK工具
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d $ANDROID_SDK_PATH/cmdline-tools
          
          # 关键：强制接受所有许可证（解决核心问题）
          SDK_MANAGER="$ANDROID_SDK_PATH/cmdline-tools/cmdline-tools/bin/sdkmanager"
          yes | $SDK_MANAGER --licenses || true  # 用yes命令自动输入y
          
          # 安装所需组件
          $SDK_MANAGER "platforms;android-29" "build-tools;29.0.3" "platform-tools"
          
          # 验证安装
          if [ ! -d "$ANDROID_SDK_PATH/platforms/android-29" ]; then
            echo "❌ Android 29平台安装失败，检查许可证是否接受"
            exit 1
          fi
          echo "ANDROID_SDK_PATH=$ANDROID_SDK_PATH" >> $GITHUB_ENV

      - name: 安装Gradle 6.9
        run: |
          GRADLE_PATH="$HOME/gradle-6.9"
          wget https://services.gradle.org/distributions/gradle-6.9-bin.zip -O gradle-6.9-bin.zip
          unzip -q gradle-6.9-bin.zip -d $HOME
          echo "GRADLE_PATH=$GRADLE_PATH" >> $GITHUB_ENV
          echo "$GRADLE_PATH/bin" >> $GITHUB_PATH

      - name: 构建项目
        run: |
          export JAVA_HOME=$JDK8_PATH
          export PATH=$JAVA_HOME/bin:$PATH
          export ANDROID_SDK_ROOT=$ANDROID_SDK_PATH
          export GRADLE_HOME=$GRADLE_PATH
          
          PROJECT_PATH="/home/runner/work/webview-app/webview-app/myapp"
          rm -rf "$PROJECT_PATH"
          mkdir -p "$PROJECT_PATH/www"
          
          # 创建核心配置
          echo '{"name":"x-app","version":"1.0.0","private":true,"cordova":{"platforms":["android"]}}' > "$PROJECT_PATH/package.json"
          echo '<?xml version="1.0"?><widget id="com.x.app" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0"><name>XApp</name><content src="index.html"/></widget>' > "$PROJECT_PATH/config.xml"
          echo '<html><body>Hello</body></html>' > "$PROJECT_PATH/www/index.html"
          
          # 添加安卓平台
          cd "$PROJECT_PATH"
          cordova platform add android@9.0.0
          sleep 5
          
          # 配置Gradle
          ANDROID_APP_PATH="$PROJECT_PATH/platforms/android/app"
          touch "$ANDROID_APP_PATH/gradle.properties"
          echo "android.useAndroidX=false" > "$ANDROID_APP_PATH/gradle.properties"
          echo "org.gradle.java.home=$JDK8_PATH" >> "$ANDROID_APP_PATH/gradle.properties"
          
          # 编译APK
          cordova build android --release
          
          # 复制结果
          APK_PATH="$ANDROID_APP_PATH/build/outputs/apk/release/app-release-unsigned.apk"
          if [ -f "$APK_PATH" ]; then
            cp "$APK_PATH" "/home/runner/work/webview-app/webview-app/final-app.apk"
          else
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 安卓应用
          path: final-app.apk
