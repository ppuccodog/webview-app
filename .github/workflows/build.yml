name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 安装PhoneGap（官方镜像）
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install -g phonegap@9.0.0
          phonegap -v

      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      - name: 依赖预安装+强制生效（终极解决方案）
        run: |
          # 1. 创建项目
          phonegap create myapp com.my.simpleapp "我的网页APP"
          cd myapp
          
          # 2. 预安装依赖到临时目录
          mkdir -p temp-deps
          cd temp-deps
          npm install properties-parser@0.6.0 string.prototype.codepointat@1.0.1 --save-dev
          cd ..
          
          # 3. 安装安卓平台（此时会自动开始安装插件）
          phonegap platform add android@9.0.0 --verbose
          
          # 4. 关键：在插件安装的间隙，复制依赖并强制npm识别
          cp -r temp-deps/node_modules platforms/android/cordova/
          
          # 5. 进入平台目录，强制npm重新识别依赖（核心修复）
          cd platforms/android/cordova
          npm init -y  # 生成package.json，让Node.js识别node_modules
          npm install --production  # 刷新依赖缓存
          cd ../../..
          
          # 6. 手动重新安装插件，确保依赖生效
          phonegap plugin add cordova-plugin-vibration@2.1.5 --verbose
          phonegap plugin add cordova-plugin-network-information@1.3.3 --verbose
          
          cd ..

      - name: 复制项目文件
        run: |
          cp -rf www/* myapp/www/
          cp config.xml myapp/
          cp config.txt myapp/www/

      - name: 编译APK（最终步骤）
        run: |
          cd myapp
          echo "🔥 依赖已强制识别，开始编译！"
          phonegap build android --release --verbose
          
          if [ -f "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 成功生成APK！"
          else
            echo "❌ 查看日志"
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: myapp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 30
