name: ÊûÑÂª∫ÂÆâÂçìÂ∫îÁî®ÔºàfindÂëΩ‰ª§ÊâæApi.jsÔºåÂøÖÊàêÔºâ
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: ÊãâÂèñ‰ª£Á†Å
        uses: actions/checkout@v4

      - name: ÂÆâË£ÖNode.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: ÂÖ®Â±ÄË£ÖCordova+Âº∫Âà∂ÊâæApi.js
        run: |
          npm config set registry https://registry.npmjs.org/
          npm cache clean --force
          # ÂÖàÂÆâË£ÖÂøÖË¶ÅÂåÖ
          npm install -g cordova@10.0.0 cordova-android@9.0.0
          # ÂÖ≥ÈîÆÔºöÁî®findÂëΩ‰ª§ÂÖ®Â±ÄÊêúÁ¥¢Api.jsÔºåÁ°Æ‰øùÊâæÂà∞
          echo "üîç ÂÖ®Â±ÄÊêúÁ¥¢Api.js..."
          API_JS_PATH=$(find /opt/hostedtoolcache/node -name "Api.js" -path "*/cordova-android/*/cordova/Api.js" | head -1)
          if [ -z "$API_JS_PATH" ]; then
            echo "‚ùå Ê≤°ÊâæÂà∞Api.jsÔºåÊâìÂç∞ÊâÄÊúâÂèØËÉΩË∑ØÂæÑÔºö"
            find /opt/hostedtoolcache/node -name "Api.js" 2>/dev/null
            exit 1
          fi
          echo "‚úÖ ÊâæÂà∞Api.jsÔºö$API_JS_PATH"
          # ÊèêÂèñcordova-androidÊ†πÁõÆÂΩï
          CORDOVA_ANDROID_PATH=$(dirname $(dirname $API_JS_PATH))
          echo "CORDOVA_ANDROID_PATH=$CORDOVA_ANDROID_PATH" >> $GITHUB_ENV
          cordova -v

      - name: ÂÆâË£ÖJDK 8Âíå11
        run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jdk openjdk-11-jdk -y
          echo "JDK8_PATH=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
          echo "JDK11_PATH=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV

      - name: ÂÆâË£ÖÂÆâÂçìSDKÔºàÂº∫Âà∂Êé•ÂèóËÆ∏ÂèØËØÅÔºâ
        run: |
          export JAVA_HOME=$JDK11_PATH
          export PATH=$JAVA_HOME/bin:$PATH
          ANDROID_SDK_PATH="$HOME/android-sdk"
          mkdir -p $ANDROID_SDK_PATH
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d $ANDROID_SDK_PATH/cmdline-tools
          SDK_MANAGER="$ANDROID_SDK_PATH/cmdline-tools/cmdline-tools/bin/sdkmanager"
          yes | $SDK_MANAGER --licenses || true
          $SDK_MANAGER "platforms;android-29" "build-tools;29.0.3" "platform-tools"
          echo "ANDROID_SDK_PATH=$ANDROID_SDK_PATH" >> $GITHUB_ENV

      - name: ÂÆâË£ÖGradle 6.9
        run: |
          GRADLE_PATH="$HOME/gradle-6.9"
          wget https://services.gradle.org/distributions/gradle-6.9-bin.zip -O gradle-6.9-bin.zip
          unzip -q gradle-6.9-bin.zip -d $HOME
          echo "GRADLE_PATH=$GRADLE_PATH" >> $GITHUB_ENV
          echo "$GRADLE_PATH/bin" >> $GITHUB_PATH

      - name: ÊûÑÂª∫È°πÁõÆÔºàË°•ÂÖ®ÊâÄÊúâÊñá‰ª∂Ôºâ
        run: |
          export JAVA_HOME=$JDK8_PATH
          export PATH=$JAVA_HOME/bin:$PATH
          export ANDROID_SDK_ROOT=$ANDROID_SDK_PATH
          export GRADLE_HOME=$GRADLE_PATH
          export CORDOVA_ANDROID_PATH=$CORDOVA_ANDROID_PATH
          
          PROJECT_PATH="/home/runner/work/webview-app/webview-app/myapp"
          rm -rf "$PROJECT_PATH"
          mkdir -p "$PROJECT_PATH/www"
          sudo chmod -R 777 "$PROJECT_PATH"
          
          # 1. ÂàõÂª∫Ê†∏ÂøÉÈÖçÁΩÆ
          echo '{"name":"x-app","version":"1.0.0","private":true,"cordova":{"platforms":["android"]}}' > "$PROJECT_PATH/package.json"
          echo '<?xml version="1.0"?><widget id="com.x.app" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0"><name>XApp</name><content src="index.html"/></widget>' > "$PROJECT_PATH/config.xml"
          echo '<html><body>Hello</body></html>' > "$PROJECT_PATH/www/index.html"
          
          cd "$PROJECT_PATH"
          
          # 2. ÊâßË°åplatform add
          cordova platform add android@9.0.0
          sleep 5
          
          # 3. Ë°•ÂÖ®ÊâÄÊúâÁº∫Â§±Êñá‰ª∂
          ANDROID_PLATFORM_PATH="$PROJECT_PATH/platforms/android"
          ANDROID_APP_PATH="$ANDROID_PLATFORM_PATH/app"
          
          # 3.1 Ë°•appÁõÆÂΩï
          mkdir -p "$ANDROID_APP_PATH"
          # 3.2 Ë°•Api.jsÔºàÁî®ÊâæÂà∞ÁöÑË∑ØÂæÑÂ§çÂà∂Ôºâ
          mkdir -p "$ANDROID_PLATFORM_PATH/cordova"
          API_JS_SOURCE=$(find $CORDOVA_ANDROID_PATH -name "Api.js" -path "*/cordova/Api.js" | head -1)
          cp "$API_JS_SOURCE" "$ANDROID_PLATFORM_PATH/cordova/Api.js"
          # 3.3 Ë°•libÁõÆÂΩïÂíåbuild.gradle
          cp -r "$CORDOVA_ANDROID_PATH/cordova/lib" "$ANDROID_PLATFORM_PATH/cordova/" 2>/dev/null || true
          cp "$CORDOVA_ANDROID_PATH/cordova/build.gradle" "$ANDROID_PLATFORM_PATH/build.gradle" 2>/dev/null || true
          echo "‚úÖ Ë°•ÂÖ®Api.jsÂíåÊâÄÊúâÊ†∏ÂøÉÊñá‰ª∂"
          
          # 4. ÈÖçÁΩÆGradle
          touch "$ANDROID_APP_PATH/gradle.properties"
          echo "android.useAndroidX=false" > "$ANDROID_APP_PATH/gradle.properties"
          echo "android.enableJetifier=false" >> "$ANDROID_APP_PATH/gradle.properties"
          echo "org.gradle.java.home=$JDK8_PATH" >> "$ANDROID_APP_PATH/gradle.properties"
          
          # 5. ÁºñËØëAPK
          echo "üî® ÂºÄÂßãÁºñËØëAPK"
          cordova build android --release
          
          # 6. Ê£ÄÊü•APK
          APK_PATH="$ANDROID_APP_PATH/build/outputs/apk/release/app-release-unsigned.apk"
          if [ -f "$APK_PATH" ]; then
            echo "üéâ Áªà‰∫éÊàêÂäüÔºÅAPKË∑ØÂæÑÔºö$APK_PATH"
            cp "$APK_PATH" "/home/runner/work/webview-app/webview-app/final-app.apk"
          else
            echo "‚ùå ÁºñËØëÂ§±Ë¥•ÔºåÊó•ÂøóÔºö"
            cat "$ANDROID_PLATFORM_PATH/build/outputs/logs/build.log" 2>/dev/null
            exit 1
          fi

      - name: ‰∏ä‰º†APK
        uses: actions/upload-artifact@v4
        with:
          name: ÂÆâÂçìÂ∫îÁî®
          path: /home/runner/work/webview-app/webview-app/final-app.apk
          retention-days: 30
