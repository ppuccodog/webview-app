name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      - name: 安装Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: 安装Cordova
        run: |
          npm config set registry https://registry.npmmirror.com/
          npm install -g cordova@11.0.0
          cordova -v

      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      - name: 创建项目并安装安卓平台
        run: |
          mkdir -p cordova-project && cd cordova-project
          cordova create . com.my.simpleapp "我的网页APP"
          npm config set registry https://registry.npmmirror.com/
          cordova platform add android@10.1.2 --verbose
          cd ..

      - name: 复制项目文件
        run: |
          mkdir -p cordova-project/platforms/android/app/src/main/assets/www/
          mkdir -p cordova-project/platforms/android/app/src/main/res/xml/
          cp -r www/* cordova-project/platforms/android/app/src/main/assets/www/
          cp config.xml cordova-project/platforms/android/app/src/main/res/xml/
          cp config.txt cordova-project/platforms/android/app/src/main/assets/www/

      - name: 确保目录存在并生成Gradle脚本（最终修复）
        run: |
          cd cordova-project/platforms/android
          # 关键：先创建目录，再写入文件！
          mkdir -p gradle/wrapper
          
          # 写入Gradle配置
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip" > gradle/wrapper/gradle-wrapper.properties
          
          # 创建自动下载依赖的gradlew脚本
          cat > gradlew << 'EOF'
          #!/usr/bin/env sh
          GRADLE_WRAPPER_JAR="gradle/wrapper/gradle-wrapper.jar"
          if [ ! -f "$GRADLE_WRAPPER_JAR" ]; then
            echo "正在自动下载Gradle依赖..."
            wget https://services.gradle.org/distributions/gradle-7.5-all.zip -O gradle-7.5-all.zip
            unzip -q gradle-7.5-all.zip
            cp gradle-7.5/wrapper/gradle-wrapper.jar "$GRADLE_WRAPPER_JAR"
            rm -rf gradle-7.5 gradle-7.5-all.zip
          fi
          exec java -jar "$GRADLE_WRAPPER_JAR" "$@"
          EOF
          
          # 赋予权限
          chmod +x gradlew
          echo "✅ 所有准备工作完成，目录和文件都存在了！"
          cd ../../..

      - name: 编译APK（最后一步！）
        run: |
          cd cordova-project/platforms/android
          echo "🔥 开始编译，这次绝对没问题！"
          ./gradlew assembleRelease
          
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 终于成功了！APK生成了！"
          else
            echo "❌ 编译失败"
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: cordova-project/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
