name: 构建安卓应用（最后一次修复）
on:
  workflow_dispatch:  # 只手动触发，专注解决问题

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14 + 全局依赖
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install -g cordova@10.0.0 properties-parser@0.6.0 string.prototype.codepointat@1.0.1
          cordova -v

      - name: 安装JDK 8（系统预装，稳定）
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: 安装安卓SDK（修复目录移动）
        run: |
          # 1. 创建SDK根目录
          mkdir -p $HOME/android-sdk
          # 2. 下载SDK工具（兼容JDK 8的版本）
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d $HOME/android-sdk/temp-tools  # 先解压到临时目录
          
          # 3. 正确创建目录结构（先删旧的，再移动）
          rm -rf $HOME/android-sdk/cmdline-tools  # 清理可能的旧目录
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv $HOME/android-sdk/temp-tools/* $HOME/android-sdk/cmdline-tools/latest/  # 从临时目录移动
          rm -rf $HOME/android-sdk/temp-tools  # 删掉临时目录
          
          # 4. 绝对路径执行sdkmanager（避开环境变量问题）
          SDK_MANAGER=$HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager
          echo "✅ sdkmanager路径：$SDK_MANAGER"
          
          # 5. 接受许可证+安装必要包
          echo "y" | SKIP_JDK_VERSION_CHECK=1 $SDK_MANAGER --licenses
          SKIP_JDK_VERSION_CHECK=1 $SDK_MANAGER "platforms;android-29" "build-tools;29.0.3" "platform-tools"
          
          # 6. 保存SDK路径供后续使用
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV

      - name: 安装Gradle 7.0
        run: |
          wget https://services.gradle.org/distributions/gradle-7.0-bin.zip -O gradle-7.0-bin.zip
          unzip -q gradle-7.0-bin.zip
          echo "GRADLE_HOME=$(pwd)/gradle-7.0" >> $GITHUB_ENV

      - name: 创建项目+编译APK（全程绝对路径）
        run: |
          # 1. 创建项目
          cordova create myapp com.my.simpleapp "我的网页APP"
          cd myapp
          
          # 2. 重写config.xml（无插件）
          echo '<?xml version="1.0" encoding="utf-8"?>
          <widget id="com.my.simpleapp" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">
            <name>我的网页APP</name>
            <content src="index.html" />
            <access origin="*" />
          </widget>' > config.xml
          
          # 3. 添加安卓平台（绝对路径指定SDK）
          ANDROID_SDK_ROOT=$HOME/android-sdk cordova platform add android@9.0.0
          
          # 4. 复制网页文件
          cp -rf ../www/* www/
          cp ../config.txt www/
          
          # 5. 编译APK（所有路径都用绝对的）
          echo "🔥 开始编译，所有工具路径都已确认！"
          ANDROID_SDK_ROOT=$HOME/android-sdk GRADLE_HOME=$(pwd)/../gradle-7.0 cordova build android --release
          
          # 6. 检查APK是否生成
          if [ -f "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 成功了！APK生成了！"
          else
            echo "❌ 查看Gradle日志（最后一步，别放弃！）"
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: myapp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 30
