name: 构建安卓应用（Cordova先创空项目，再补配置）
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: 全局安装Cordova
        run: |
          npm config set registry https://registry.npmjs.org/
          npm cache clean --force
          npm install -g cordova@10.0.0 properties-parser@0.6.0 string.prototype.codepointat@1.0.1
          cordova -v

      - name: 安装JDK 8和11
        run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jdk openjdk-11-jdk -y
          echo "JDK8_PATH=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
          echo "JDK11_PATH=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV

      - name: 用JDK 11安装安卓SDK
        run: |
          export JAVA_HOME=$JDK11_PATH
          export PATH=$JAVA_HOME/bin:$PATH
          ANDROID_SDK_PATH="$HOME/android-sdk"
          mkdir -p $ANDROID_SDK_PATH
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d $ANDROID_SDK_PATH/cmdline-tools
          SDK_MANAGER="$ANDROID_SDK_PATH/cmdline-tools/cmdline-tools/bin/sdkmanager"
          echo "y" | $SDK_MANAGER --licenses
          $SDK_MANAGER "platforms;android-29" "build-tools;29.0.3" "platform-tools"
          echo "ANDROID_SDK_PATH=$ANDROID_SDK_PATH" >> $GITHUB_ENV

      - name: 安装Gradle 6.9
        run: |
          GRADLE_PATH="$HOME/gradle-6.9"
          wget https://services.gradle.org/distributions/gradle-6.9-bin.zip -O gradle-6.9-bin.zip
          unzip -q gradle-6.9-bin.zip -d $HOME
          echo "GRADLE_PATH=$GRADLE_PATH" >> $GITHUB_ENV
          echo "$GRADLE_PATH/bin" >> $GITHUB_PATH

      - name: Cordova先创空项目+后补配置（彻底符合规则）
        run: |
          export JAVA_HOME=$JDK8_PATH
          export PATH=$JAVA_HOME/bin:$PATH
          export ANDROID_SDK_ROOT=$ANDROID_SDK_PATH
          export GRADLE_HOME=$GRADLE_PATH
          
          # 1. 项目路径+先删后创（确保绝对空目录）
          PROJECT_PATH="/home/runner/work/webview-app/webview-app/myapp"
          rm -rf "$PROJECT_PATH"  # 强制删除，不管是否存在
          mkdir -p "$PROJECT_PATH"
          echo "✅ 创建绝对空目录：$PROJECT_PATH"
          
          # 2. 关键：先让Cordova创建空项目（此时目录为空，符合规则）
          cordova create "$PROJECT_PATH" com.example.myapp "我的网页APP"
          echo "✅ Cordova空项目创建成功"
          
          # 3. 后补package.json（解决包名冲突，此时项目已创建，不影响）
          echo '{"name": "my-webview-app", "version": "1.0.0", "private": true}' > "$PROJECT_PATH/package.json"
          echo "✅ 补充package.json"
          
          # 4. 覆盖config.xml（禁用AndroidX）
          echo '<?xml version="1.0" encoding="utf-8"?>
          <widget id="com.example.myapp" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">
            <name>我的网页APP</name>
            <content src="index.html" />
            <access origin="*" />
            <preference name="AndroidXEnabled" value="false" />
          </widget>' > "$PROJECT_PATH/config.xml"
          
          # 5. 添加安卓平台（此时项目结构完整，无冲突）
          cordova platform add android@9.0.0 --project "$PROJECT_PATH"
          
          # 6. 等待2秒+验证平台目录
          sleep 2
          ANDROID_PLATFORM_PATH="$PROJECT_PATH/platforms/android"
          if [ ! -d "$ANDROID_PLATFORM_PATH" ]; then
            echo "平台目录缺失，项目内容："
            ls -l "$PROJECT_PATH"
            exit 1
          fi
          
          # 7. 复制网页文件
          if [ -d "/home/runner/work/webview-app/webview-app/www" ]; then
            cp -rf "$_"/* "$PROJECT_PATH/www/"
            echo "✅ 复制网页文件"
          fi
          if [ -f "/home/runner/work/webview-app/webview-app/config.txt" ]; then
            cp "$_" "$PROJECT_PATH/www/"
            echo "✅ 复制config.txt"
          fi
          
          # 8. 修复Gradle配置
          sed -i '/jcenter.bintray.com/a \        maven { url "https://maven.google.com" }\n        maven { url "https://dl.google.com/maven/repo/" }' "$ANDROID_PLATFORM_PATH/build.gradle"
          echo "org.gradle.java.home=$JDK8_PATH" > "$ANDROID_PLATFORM_PATH/gradle.properties"
          
          # 9. 编译APK
          cd "$PROJECT_PATH"
          cordova build android --release
          
          # 10. 检查并复制APK
          APK_PATH="$ANDROID_PLATFORM_PATH/app/build/outputs/apk/release/app-release-unsigned.apk"
          if [ -f "$APK_PATH" ]; then
            echo "🎉 APK生成成功！路径：$APK_PATH"
            cp "$APK_PATH" "/home/runner/work/webview-app/webview-app/final-app.apk"
          else
            exit 1
          fi

      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: /home/runner/work/webview-app/webview-app/final-app.apk
          retention-days: 30
