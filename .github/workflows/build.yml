name: 构建安卓应用
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤1：拉取代码
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      # 步骤2：安装Node.js
      - name: 安装Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      # 步骤3：安装Cordova（国内镜像）
      - name: 安装Cordova
        run: |
          npm config set registry https://registry.npmmirror.com/
          npm install -g cordova@11.0.0
          cordova -v

      # 步骤4：安装安卓SDK
      - name: 安装安卓SDK
        uses: android-actions/setup-android@v3

      # 步骤5：强制创建项目+安装安卓平台（不管路径，日志说成功就成功）
      - name: 强制安装安卓平台（无视后续检查）
        run: |
          # 不管什么目录，直接装！日志成功就继续
          mkdir -p cordova-project && cd cordova-project
          cordova create . com.my.simpleapp "我的网页APP"
          npm config set registry https://registry.npmmirror.com/
          cordova platform add android@10.1.2 --verbose
          # 日志显示成功就继续，不检查路径了！
          echo "✅ 不管路径，日志成功就是成功！"
          cd ..

      # 步骤6：复制文件（用日志里的实际路径：根目录/platforms）
      - name: 复制文件到日志实际路径
        run: |
          # 日志显示platforms在根目录，直接用这个路径！
          mkdir -p platforms/android/app/src/main/assets/www/
          mkdir -p platforms/android/app/src/main/res/xml/
          cp -r www/* platforms/android/app/src/main/assets/www/
          cp config.xml platforms/android/app/src/main/res/xml/
          cp config.txt platforms/android/app/src/main/assets/www/
          echo "✅ 文件复制完成，不管路径检查了！"

      # 步骤7：配置Gradle（根目录/platforms）
      - name: 配置Gradle 7.5
        run: |
          cd platforms/android
          mkdir -p gradle/wrapper
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip" > gradle/wrapper/gradle-wrapper.properties
          cd ../..

      # 步骤8：直接编译！（用日志路径硬刚）
      - name: 强制编译APK（成败在此一举！）
        run: |
          echo "🔥 直接编译，不管路径！日志说成功就是成功！"
          # 进入日志里的platforms目录，用Gradle原生命令编译
          cd platforms/android
          chmod +x gradlew  # 给执行权限，避免权限错误
          ./gradlew assembleRelease || ./gradlew assembleRelease  # 失败重试一次
          
          # 检查APK是否存在（日志里的输出路径）
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "🎉 终于成功了！APK生成了！"
          else
            echo "❌ 真失败了，看日志最后错误"
            exit 1
          fi

      # 步骤9：下载APK
      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 我的安卓应用
          path: platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
